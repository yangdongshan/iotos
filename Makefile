

ifeq ($(V),)
	Q = @
else
	Q :=
endif
export Q

ROOTDIR = $(shell pwd)
export ROOTDIR

SCRIPTSDIR = $(ROOTDIR)/scripts
export SCRIPTSDIR

# include system .config which is generated by make menuconfig
-include .config

# include config
-include $(SCRIPTSDIR)/config.mk

KCONFIGDIR = $(ROOTDIR)/kconfig
KCONFIGFILE = $(ROOTDIR)/Kconfig


CFLAGS += -include $(ROOTDIR)/include/generated/autoconf.h

ARFLAGS +=

LDFLAGS +=

CHIP_DIR := arch/$(ARCH)/$(CHIP_FAMILY)/chip
BOARD_DIR := arch/$(ARCH)/$(CHIP_FAMILY)/$(BOARD)
BOOT_DIR := arch/$(ARCH)/$(CHIP_FAMILY)/boot

# library directory
LIBDIR := $(CHIP_DIR) \
          $(BOARD_DIR) \
		  init \
		  libc \
		  test

LIBDIR += kernel

LIBS = $(addprefix $(ROOTDIR)/,$(foreach dir, $(LIBDIR), $(dir)/lib$(dir).a))
export LIBS

LDDIR += $(addprefix -L$(ROOTDIR)/,$(LIBDIR))
LDLIB += $(addprefix -l,$(foreach dir, $(LIBDIR), $(shell basename $(dir))))

CFLAGS += -I$(ROOTDIR)/$(CHIP_DIR)/include \
		  -I$(ROOTDIR)/$(CHIP_DIR)/peripherals/include \
		  -I$(ROOTDIR)/$(BOOT_DIR)/include \
		  -I$(ROOTDIR)/$(BOARD_DIR)/include \
          -I$(ROOTDIR)/kernel/include \
          -I$(ROOTDIR)/include \
          -I$(ROOTDIR)/libc/include \
		  -I$(ROOTDIR)/test/include


export LDDIR
export LDLIB

export CFLAGS
export ARFLAGS
export LDFLAGS

ELF=$(BOOT_DIR)/$(PROJNAME).elf
HEX=$(BOOT_DIR)/$(PROJNAME).hex
BIN=$(BOOT_DIR)/$(PROJNAME).bin
SREC=$(BOOT_DIR)/$(PROJNAME).srec
MAP=$(BOOT_DIR)/$(PROJNAME).map

all: $(ELF)

$(ELF): lib
	$(Q) $(MAKE) -C $(BOOT_DIR) exe elf=$(ROOTDIR)/$(ELF) linker_file=$(LINKER_FILE)
	$(Q) echo "OBJCOPY $(HEX)"
	$(Q) $(OBJCOPY) -O ihex $@ $(HEX)
	$(Q) echo "OBJCOPY $(BIN)"
	$(Q) $(OBJCOPY) -O binary $@ $(BIN)
	$(Q) echo "OBJCOPY $(SREC)"
	$(Q) $(OBJCOPY) -O srec $@ $(SREC)
	$(Q) echo "NM $(MAP)"
	$(Q) $(NM) -s -S $(ELF) > $(MAP)
	$(Q) echo "================================================"
	$(Q) $(SIZE) -t $(ELF)
	$(Q) echo "================================================"


lib: $(LIBDIR)
	$(Q) $(foreach dir, $(LIBDIR), \
		$(MAKE) -C $(dir) obj || exit "$$?";\
		$(MAKE) -C $(dir) lib libname=lib$(shell basename $(dir)).a || exit "$$?";)





.PHONY: menuconfig distclean silentoldconfig clean launch_qemu download

menuconfig: $(KCONFIGDIR)/mconf $(KCONFIGDIR)/conf
	$(Q) $< -s $(KCONFIGFILE)
	$(Q) $(MAKE) silentoldconfig

$(KCONFIGDIR)/mconf:
	$(Q) $(MAKE) -C $(KCONFIGDIR)

silentoldconfig: $(KCONFIGDIR)/conf
	$(Q) mkdir -p include/generated include/config
	$(Q) $< -s --silentoldconfig $(KCONFIGFILE)

clean:
	$(Q) $(foreach dir, $(BOOT_DIR) $(LIBDIR), $(MAKE) -C $(dir) clean;)
	$(Q) -rm -f $(ELF) $(HEX) $(BIN) $(SREC) $(MAP)

distclean: clean
	$(Q) $(MAKE) -C $(KCONFIGDIR) clean
	$(Q) -rm -rf $(CHIP_DIR) $(BOARD_DIR) $(BOOT_DIR)
	$(Q) -rm -rf include/generated include/config .config

launch_qemu: $(ISO)
	$(Q) $(QEMU) -cdrom $(ISO) -nographic #-enable-kvm

download:
	$(Q) st-flash  write $(BIN) 0x8000000
